{"name":"Exemplo do padrão Template Method em C++","tagline":"Exemplo em C++ do uso do padrão de projeto Template Method","body":"## Descrição do padrão\r\n\r\nO padrão tem a intenção de definir um esqueleto de um algoritmo em uma operação, deixando a responsabilidade da implementação para as classes filhas.\r\n\r\nA classe base declara algoritmos de base que serão implementados pelas classes derivadas.\r\n\r\n![Estrutura do padrão Template Method](http://sourcemaking.com/files/v2/content/patterns/Template_Method-2x.png)\r\n\r\nComo é possível notar, o método template chama os outros três seguintes métodos, como se fossem passos. Porém a classe base deixa para as subclasses definirem tais passos. A classe pai é uma classe abstrata, que só implementa o `templateMethod()`, logo não há o risco do cliente instanciar um `FrameworkClass` sem que os passos do algoritmos estejam implementados.\r\n\r\n## Explicação do Exemplo\r\n\r\nO exemplo trata de uma \"agenda de trabalho\" que pode ter trabalhos tanto de manutenção quanto de limpeza. Tanto para limpeza quanto para manutenção temos 4 passos a serem feitos: iniciar a tarefa, tarefa da primeira hora, da segunda hora e da terceira hora.\r\n\r\nA classe `WorkSchedule` (`FrameworkClass`) é a classe abstrata que define a interface da agenda de trabalho. Ela tem o método público `void threeHourOperation()` que é utilizado pela classe cliente e os métodos protegidos (para que seja implementados, mas não visíveis para o cliente) que definem os passos do algoritmo.\r\n\r\n**WorkSchedule:**\r\n\r\nclass WorkSchedule\r\n{\r\npublic:\r\n    WorkSchedule();\r\n    void threeHourOperation() const;\r\n    virtual ~WorkSchedule();\r\nprotected:\r\n    virtual void startTask() const = 0;\r\n    virtual void hourOneTask() const = 0;\r\n    virtual void hourTwoTask() const = 0;\r\n    virtual void hourThreeTask() const = 0;\r\n};\r\n\r\n## Alunos\r\n - Lucas Possatti (@possatti)\r\n - Phillipe Alcantara (@paflopes)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}